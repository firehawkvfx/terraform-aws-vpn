---
# tasks file for roles/init-host

- name: Collect some facts only for ansible_distribution
  setup:
    gather_subset:
      - '!all'
      - 'min'
  tags:
  - always
  
- name: change hostname
  hostname:
    name: "{{ set_hostname }}"
  when: set_hostname is defined

- name: Update hosts file with regex if ubuntu to handle correctly.  Otherwise this https://github.com/ansible/ansible-modules-core/issues/2308
  lineinfile: dest=/etc/hosts line="127.0.0.1       localhost       localhost.localdomain       {{ set_hostname }}"
              regexp="^127\.0\.0\.1.*localhost.*$"
  when: set_hostname is defined and ( ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu' )

# - name: "ensure key exists {{ general_use_ssh_key }}"
#   openssh_keypair:
#     path: "{{ general_use_ssh_key }}"
#     mode: '0600'
#     owner: deployuser
#   delegate_to: "{{ delegate_host }}"
#   become: true

- name: insert/update block in /etc/hosts
  blockinfile:
    path: /etc/hosts
    block: |
      {{ item.ip }} {{ item.hostname }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.hostname }}"
  with_items:
    - { ip: "{{ openfirehawkserver_ip }}", hostname: "{{ openfirehawkserver_name }}" }

- name: Allow new lines from ansible shell output.  Logout or reboot for this to take effect.
  lineinfile:
    path: /etc/environment
    line: "ANSIBLE_STDOUT_CALLBACK=debug"
    create: yes
    
- name: insert marker start
  lineinfile:
    path: /etc/rc.local
    insertafter: "^#?.By default.*$"
    line: "# BEGIN ANSIBLE MANAGED BLOCK"
    backup: yes
  tags:
  - init

- name: insert marker end
  lineinfile:
    path: /etc/rc.local
    insertafter: "# BEGIN ANSIBLE MANAGED BLOCK"
    line: "# END ANSIBLE MANAGED BLOCK"
    create: true
  tags:
  - init

- name: insert/update block in /etc/rc.local
  blockinfile:
    path: /etc/rc.local
    backup: yes
    content: |
      #promiscuous mode required for routing
      /sbin/ifconfig {{ vpn_nic }} up
      /sbin/ifconfig {{ vpn_nic }} promisc
  when: configure_gateway|bool
  tags:
  - init

- name: execute and check with netstat
  shell: |
    /etc/rc.local
    netstat -i
  register: netstatout
  become: true
  tags:
  - init

- debug:
    msg: "{{ netstatout.stdout }}"