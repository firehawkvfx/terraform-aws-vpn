#!/bin/bash

set -e

EXECDIR="$(pwd)"
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )" # The directory of this script
cd "$SCRIPTDIR"

if [[ -z "$1" ]]; then
    echo "ERROR: 1st args provided must be the resourcetier (dev / main) to lookup the local private ip address to be used.  You have configured this in ip_addresses.json"
    exit 1
fi


if [[ -z "$2" ]]; then
  echo "Error: 2nd arg bastion host must be provided. eg:"
  echo "./copy_vault_file_from_bastion.sh main centos@ec2-3-25-143-13.ap-southeast-2.compute.amazonaws.com centos@i-0df3060971160cdd6.node.consul"
  exit 1
fi

if [[ -z "$3" ]]; then
  echo "Error: 3rd arg vault client must be provided. eg: centos@i-00265f3f7614cbbee.node.consul"
  echo "./copy_vault_file_from_bastion.sh main centos@ec2-3-25-143-13.ap-southeast-2.compute.amazonaws.com centos@i-0df3060971160cdd6.node.consul"
  exit 1
fi

if [[ -z "$VAULT_TOKEN" ]]; then
  echo "You can generate a token to login and retrieve the VPN config with:"
  echo ""
  echo "vault token create -policy=vpn_read_config -explicit-max-ttl=5m -ttl=5m -use-limit=1"
  echo ""
  echo "Provide a vault token to utilise on the private vault client:"
  read -s -p "VAULT_TOKEN: " VAULT_TOKEN
  echo ""
fi

export resourcetier="$1"
echo "resourcetier: $resourcetier"
host1="$2"
host2="$3"

openvpn_user="openvpnas"

if [[ -z "$openvpn_user_pw" ]]; then
    echo "After establishing SSH forwarding, retrieve the VPN password from the Vault UI https://127.0.0.1:8200/ui"
    read -s -p "openvpn_user_pw: " openvpn_user_pw
fi

if [[ -z "$openvpn_user_pw" ]]; then
    echo "ERROR: provided openvpn_user_pw is empty.  Try again."
    exit 1
fi

echo "openvpn_user: $openvpn_user"

source_file_path="/usr/local/openvpn_as/scripts/seperate/client.ovpn" # the original file path that was stored in vault
source_vault_path="$resourcetier/data/vpn/client_cert_files$source_file_path" # the full namespace / path to the file in vault.
target_path="$SCRIPTDIR/openvpn_config/$(basename $source_file_path)"

rm -f $SCRIPTDIR/openvpn_config/client.ovpn
rm -f $SCRIPTDIR/openvpn_config/openvpn.conf

$SCRIPTDIR/scripts/get-vault-file --host1 $host1 --host2 $host2 --source-vault-path $source_vault_path --target-path $target_path --vault-token $VAULT_TOKEN

# Replicate file for vpn.  This might be able to be deprecated, or replaced with a move
cp -f $SCRIPTDIR/openvpn_config/client.ovpn $SCRIPTDIR/openvpn_config/openvpn.conf

openvpn_user=$openvpn_user openvpn_user_pw=$openvpn_user_pw vagrant up