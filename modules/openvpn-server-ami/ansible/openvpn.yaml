# configures autologin for open vpn and routes.

# to update routes only for the deployuser host, execute 
# ansible-playbook -i ansible/inventory ansible/openvpn.yaml -v --extra-vars "" --tags add-routes

# - hosts: firehawkgateway
#   remote_user: deployuser
#   gather_facts: "{{ variable_gather_facts | default('false') }}"
#   become: true

#   tasks:
#   - name: Test connection.
#     debug:
#       msg: "test connection"

#   - set_fact:
#       hosts_confirmed: true
#     delegate_to: localhost
#     delegate_facts: true

# - name: Verify hosts
#   hosts: localhost
#   gather_facts: no
#   tasks:

#   - assert:
#       that: hosts_confirmed | default(false) # A method that verifies the host was reached.

- hosts: "{{ variable_host | default('openvpnip_private') }}"
  remote_user: openvpnas
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  become: true

  vars:
    client_network: None
    client_netmask_bits: None
    # ansible_python_interpreter: "/usr/bin/python3"
    
  pre_tasks:
    # - name: Reboot the server and wait for it to come back up. # This may not be necesary but there were intermittent issues with /usr/local/openvpn_as/scripts/sacli that a reboot may have resolved
    #   reboot:

    # - name: Rebooted
    #   debug:
    #     msg: "rebooted"

    - name: create dir.
      file:
        path: /usr/local/openvpn_as/scripts/seperate
        state: directory

    - name: configure openvpn server settings
      shell: |
        ls -la /usr/local/openvpn_as/scripts/
        /usr/local/openvpn_as/scripts/sacli -k vpn.daemon.0.client.network -v {{ client_network }} ConfigPut
        /usr/local/openvpn_as/scripts/sacli -k vpn.daemon.0.client.netmask_bits -v {{ client_netmask_bits }} ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.server.tls_auth' --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.gateway_access --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_network.0 --value '{{ private_subnet1 }}' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_network.1 --value '{{ public_subnet1 }}' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_network.2 --value '{{ client_network }}/{{ client_netmask_bits }}' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key vpn.server.routing.private_access --value 'route' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.client.routing.reroute_dns' --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.server.dhcp_option.domain' --value 'ap-southeast-2.compute.internal' ConfigPut
        /usr/local/openvpn_as/scripts/sacli --key 'vpn.server.routing.allow_private_nets_to_clients' --value 'true' ConfigPut
        /usr/local/openvpn_as/scripts/sacli start
        cd /usr/local/openvpn_as/scripts/
        ./sacli --user {{ openvpn_user }} --key 'prop_autologin' --value 'true' UserPropPut
        ./sacli --user {{ openvpn_user }} --key 'c2s_route.0' --value '{{ remote_subnet_cidr }}' UserPropPut
        ./sacli --user {{ openvpn_user }} AutoGenerateOnBehalfOf
        ./sacli -o ./seperate --cn {{ openvpn_user }} get5
        chown {{ openvpn_user }} seperate/*
        /usr/local/openvpn_as/scripts/sacli start
        ls -la seperate
      register: command_result
      failed_when: "'ERROR' in command_result.stderr"

    # - name: ensure dns settings are correct. # Use the vpn private ip as the DNS resolver
    #   blockinfile: # see https://www.reddit.com/r/aws/comments/5i4zqa/route53_private_dns_openvpn_happy_devops/
    #     path: /usr/local/openvpn_as/scripts/seperate/client.ovpn
    #     marker: "### {mark} ANSIBLE MANAGED BLOCK ###"
    #     insertafter: '^.*setenv PUSH_PEER_INFO.*$'
    #     block: |
    #       push "dhcp-option DOMAIN ap-southeast-2.compute.internal"
    #       push "dhcp-option DNS {{ private_ip }}"

    #       script-security 2
    #       # not working in ubuntu 16.04
    #       up /etc/openvpn/update-resolv-conf                                                                      
    #       down /etc/openvpn/update-resolv-conf
    #       down-pre

    #       # setenv PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    #       # script-security 2
    #       # up /etc/openvpn/scripts/update-systemd-resolved
    #       # up-restart
    #       # down /etc/openvpn/scripts/update-systemd-resolved
    #       # down-pre
    #       # dhcp-option DOMAIN-ROUTE .

    # - name: start server afer settings change
    #   shell: |
    #     /usr/local/openvpn_as/scripts/sacli start
    #   register: command_result
    #   failed_when: "'ERROR' in command_result.stderr"

  roles:
    - role: openvpn

- hosts: "{{ variable_host | default('openvpnip_private') }}"
  remote_user: openvpnas
  gather_facts: "{{ variable_gather_facts | default('false') }}"
  become: true
  any_errors_fatal: true
  
  vars:
    remove_file: true
    certificates_location: /usr/local/openvpn_as/scripts/seperate
    secrets:
      secret1:
        location: "{{ certificates_location }}/ca.crt"
        target: "{{ certificates_location }}/ca.crt"
      secret2:
        location: "{{ certificates_location }}/client.crt"
        target: "{{ certificates_location }}/client.crt"
      secret3:
        location: "{{ certificates_location }}/client.key"
        target: "{{ certificates_location }}/client.key"
      secret4:
        location: "{{ certificates_location }}/ta.key"
        target: "{{ certificates_location }}/ta.key"
      secret5:
        location: "{{ certificates_location }}/client.ovpn"
        target: "{{ certificates_location }}/client.ovpn"
        
  tasks:
  - name: firehawkvfx.core.vault_store_secret
    with_items:
      - "{{ lookup('dict', secrets) }}"
    include_role:
      name: firehawkvfx.core.vault_store_secret # you must provide resourcetier at the commandline to seperate the namespace for different environments


# - hosts: firehawkgateway
#   remote_user: deployuser
#   gather_facts: "{{ variable_gather_facts | default('false') }}"
#   become: true

#   vars:
#     client_network: None
#     client_netmask_bits: None

#   roles:
#   - role: openvpn_gateway

# see manual dns https://www.tecmint.com/set-permanent-dns-nameservers-in-ubuntu-debian/

# see https://askubuntu.com/questions/980382/how-do-i-to-set-the-dns-server-for-a-device-using-nmcli